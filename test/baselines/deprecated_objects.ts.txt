type CarBase = ThingBase & {
    "doorNumber"?: Number | readonly Number[];
};
export type Car = {
    "@type": "Car";
} & CarBase;

type PersonLikeBase = ThingBase & {
    "height"?: Number | readonly Number[];
};
export type PersonLike = {
    "@type": "PersonLike";
} & PersonLikeBase;

type ThingBase = {
    /** IRI identifying the canonical address of this object. */
    "@id"?: string;
    "name"?: Text | readonly Text[];
    /**
     * Names are great! {@link X Y}
     * @deprecated Consider using http://schema.org/name or http://schema.org/height instead.
     */
    "names"?: Text | readonly Text[];
};
export type Thing = ({
    "@type": "Thing";
} & ThingBase) | (Car | PersonLike | Vehicle);

type VehicleBase = ThingBase & {
    "doorNumber"?: Number | readonly Number[];
    /** @deprecated Consider using http://schema.org/doorNumber instead. */
    "doors"?: Number | readonly Number[];
};
/** @deprecated Use Car instead. */
export type Vehicle = {
    "@type": "Vehicle";
} & VehicleBase;

